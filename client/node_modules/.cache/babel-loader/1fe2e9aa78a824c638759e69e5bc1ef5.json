{"ast":null,"code":"var _jsxFileName = \"/home/vlad/iktib-case/client/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { Col, Container, Form, Row, Button, Spinner } from \"react-bootstrap\";\nimport { useLoginUserMutation } from \"../services/appApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppContext } from \"../context/appContext\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const {\n    socket\n  } = useContext(AppContext);\n  const [loginUser, {\n    isLoading,\n    error\n  }] = useLoginUserMutation();\n\n  function handleLogin(e) {\n    e.preventDefault(); // login logic\n\n    loginUser({\n      email,\n      password\n    }).then(_ref => {\n      let {\n        data\n      } = _ref;\n\n      if (data) {\n        // socket work\n        socket.emit(\"new-user\"); // navigate to the chat\n\n        navigate(\"/chat\");\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        className: \"login__bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 7,\n        className: \"d-flex align-items-center justify-content-center flex-direction-column \",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"mt-3\",\n          style: {\n            width: \"80%\",\n            maxWidth: 500\n          },\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicEmail\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"alert alert-danger\",\n              children: error.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 39\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Email\",\n              onChange: e => setEmail(e.target.value),\n              value: email,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n              onChange: e => setPassword(e.target.value),\n              value: password,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"grow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 42\n            }, this) : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"WZSMjqpEzYfx3q1tabd6PJC+z3A=\", false, function () {\n  return [useNavigate, useLoginUserMutation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/vlad/iktib-case/client/src/pages/Login.js"],"names":["React","useContext","useState","Col","Container","Form","Row","Button","Spinner","useLoginUserMutation","useNavigate","AppContext","Login","email","setEmail","password","setPassword","navigate","socket","loginUser","isLoading","error","handleLogin","e","preventDefault","then","data","emit","width","maxWidth","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Col, Container, Form, Row, Button, Spinner } from \"react-bootstrap\";\nimport { useLoginUserMutation } from \"../services/appApi\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppContext } from \"../context/appContext\";\n\nimport \"./Login.css\";\n\nfunction Login() {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const navigate = useNavigate();\n    const { socket } = useContext(AppContext);\n    const [loginUser, { isLoading, error }] = useLoginUserMutation();\n    function handleLogin(e) {\n        e.preventDefault();\n        // login logic\n        loginUser({ email, password }).then(({ data }) => {\n            if (data) {\n                // socket work\n                socket.emit(\"new-user\");\n                // navigate to the chat\n                navigate(\"/chat\");\n            }\n        });\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col md={5} className=\"login__bg\"></Col>\n                <Col md={7} className=\"d-flex align-items-center justify-content-center flex-direction-column \">\n                    <Form className=\"mt-3\" style={{ width: \"80%\", maxWidth: 500 } } onSubmit={handleLogin}>\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                            {error && <p className=\"alert alert-danger\">{error.data}</p>}\n                            <h1>Авторизация</h1>\n                            <Form.Label>Введите email</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} value={email} required />\n                        </Form.Group>\n\n                        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                            <Form.Label>Введите пароль</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Пароль\" onChange={(e) => setPassword(e.target.value)} value={password} required />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">\n                            {isLoading ? <Spinner animation=\"grow\" /> : \"Login\"}\n                        </Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}