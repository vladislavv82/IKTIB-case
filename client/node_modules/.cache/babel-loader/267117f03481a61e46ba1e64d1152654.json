{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\"; // define a service user a base URL\n\nconst appApi = createApi({\n  reducerPath: \"appApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:5001\"\n  }),\n  endpoints: builder => ({\n    // login\n    loginUser: builder.mutation({\n      query: user => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    // logout\n    logoutUser: builder.mutation({\n      query: payload => ({\n        url: \"/logout\",\n        method: \"DELETE\",\n        body: payload\n      })\n    })\n  })\n});\nexport const {\n  useLoginUserMutation,\n  useLogoutUserMutation\n} = appApi;\nexport default appApi;","map":{"version":3,"sources":["/home/vlad/iktib-case/client/src/services/appApi.js"],"names":["createApi","fetchBaseQuery","appApi","reducerPath","baseQuery","baseUrl","endpoints","builder","loginUser","mutation","query","user","url","method","body","logoutUser","payload","useLoginUserMutation","useLogoutUserMutation"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C,C,CAEA;;AAEA,MAAMC,MAAM,GAAGF,SAAS,CAAC;AACrBG,EAAAA,WAAW,EAAE,QADQ;AAErBC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AACtBI,IAAAA,OAAO,EAAE;AADa,GAAD,CAFJ;AAMrBC,EAAAA,SAAS,EAAGC,OAAD,KAAc;AAErB;AACAC,IAAAA,SAAS,EAAED,OAAO,CAACE,QAAR,CAAiB;AACxBC,MAAAA,KAAK,EAAGC,IAAD,KAAW;AACdC,QAAAA,GAAG,EAAE,cADS;AAEdC,QAAAA,MAAM,EAAE,MAFM;AAGdC,QAAAA,IAAI,EAAEH;AAHQ,OAAX;AADiB,KAAjB,CAHU;AAWrB;AAEAI,IAAAA,UAAU,EAAER,OAAO,CAACE,QAAR,CAAiB;AACzBC,MAAAA,KAAK,EAAGM,OAAD,KAAc;AACjBJ,QAAAA,GAAG,EAAE,SADY;AAEjBC,QAAAA,MAAM,EAAE,QAFS;AAGjBC,QAAAA,IAAI,EAAEE;AAHW,OAAd;AADkB,KAAjB;AAbS,GAAd;AANU,CAAD,CAAxB;AA6BA,OAAO,MAAM;AAAEC,EAAAA,oBAAF;AAAwBC,EAAAA;AAAxB,IAAkDhB,MAAxD;AAEP,eAAeA,MAAf","sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// define a service user a base URL\n\nconst appApi = createApi({\n    reducerPath: \"appApi\",\n    baseQuery: fetchBaseQuery({\n        baseUrl: \"http://localhost:5001\",\n    }),\n\n    endpoints: (builder) => ({\n\n        // login\n        loginUser: builder.mutation({\n            query: (user) => ({\n                url: \"/users/login\",\n                method: \"POST\",\n                body: user,\n            }),\n        }),\n\n        // logout\n\n        logoutUser: builder.mutation({\n            query: (payload) => ({\n                url: \"/logout\",\n                method: \"DELETE\",\n                body: payload,\n            }),\n        }),\n    }),\n});\n\nexport const { useLoginUserMutation, useLogoutUserMutation } = appApi;\n\nexport default appApi;\n"]},"metadata":{},"sourceType":"module"}