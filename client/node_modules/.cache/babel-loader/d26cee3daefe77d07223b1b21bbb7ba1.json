{"ast":null,"code":"var _jsxFileName = \"/home/vlad/iktib-case/client/src/pages/Chek.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useGeoLocation from \"../hook/useGeoLocation\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chek = () => {\n  _s();\n\n  const location = useGeoLocation();\n  let lat1 = location.coordinates.lat;\n  lat1 = parseFloat(lat1);\n  let lng1 = location.coordinates.lng;\n  lng1 = parseFloat(lng1);\n  let rezult = false; // function timeout(){\n  //     4.2062 < lat1 < 4.20489 && 3.93943 < lng1 < 3.99016 ? rezult = true : rezult = false\n  // }\n\n  function timeout() {\n    let result;\n\n    if (4.2062 < lat1 < 4.20489) {\n      if (3.93943 < lng1 < 3.99016) {}\n    } else {\n      result = 'NOT positive';\n    }\n\n    return result;\n  }\n\n  timeout();\n  console.log(rezult);\n  console.log(rezult);\n  console.log(lat1, lng1, typeof lat1, lng1);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"separator\",\n          children: \"\\u0412\\u0430\\u0448\\u0430 \\u0433\\u0435\\u043E\\u043B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row d-flex justify-content-center mt-3 mb-5 pb-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header text-left font-weight-bold d-flex\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"inline-block mr-auto pt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043F\\u043E\\u0441\\u0435\\u0449\\u0435\\u043D\\u0438\\u044F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 29\n                  }, this), location.loaded ? /*#__PURE__*/_jsxDEV(\"h1\", {\n                    children: \"\\u0412\\u044B \\u043D\\u0430 \\u043F\\u0430\\u0440\\u0435\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 39\n                  }, this) : \"Location data not available yet.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chek, \"mAYe9b/xBZl79QwL6l8d0pLiKyw=\", false, function () {\n  return [useGeoLocation];\n});\n\n_c = Chek;\nexport default Chek;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chek\");","map":{"version":3,"sources":["/home/vlad/iktib-case/client/src/pages/Chek.js"],"names":["React","useGeoLocation","Container","Row","Col","Chek","location","lat1","coordinates","lat","parseFloat","lng1","lng","rezult","timeout","result","console","log","loaded"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAMC,QAAQ,GAAGL,cAAc,EAA/B;AAEA,MAAIM,IAAI,GAAGD,QAAQ,CAACE,WAAT,CAAqBC,GAAhC;AACAF,EAAAA,IAAI,GAAGG,UAAU,CAAEH,IAAF,CAAjB;AACA,MAAII,IAAI,GAAGL,QAAQ,CAACE,WAAT,CAAqBI,GAAhC;AACAD,EAAAA,IAAI,GAAGD,UAAU,CAAEC,IAAF,CAAjB;AAEA,MAAIE,MAAM,GAAG,KAAb,CATe,CAUf;AACA;AACA;;AAEA,WAASC,OAAT,GAAmB;AACf,QAAIC,MAAJ;;AACA,QAAI,SAASR,IAAT,GAAgB,OAApB,EAA6B;AAC3B,UAAG,UAAUI,IAAV,GAAiB,OAApB,EAA4B,CAE3B;AACF,KAJD,MAIO;AACLI,MAAAA,MAAM,GAAG,cAAT;AACD;;AACD,WAAOA,MAAP;AACD;;AACDD,EAAAA,OAAO;AAETE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAGAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAAkBI,IAAlB,EAAwB,OAAOJ,IAA/B,EAAqCI,IAArC;AAEF,sBAEE,QAAC,SAAD;AAAA,2BACQ,QAAC,GAAD;AAAA,6BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAK,UAAA,SAAS,EAAC,kDAAf;AAAA,iCACJ;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,+CAAf;AAAA,uCACI;AAAK,kBAAA,SAAS,EAAC,2BAAf;AAAA,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEKL,QAAQ,CAACY,MAAT,gBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADL,GAEK,kCAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,UAFF;AAyBE,CA1DJ;;GAAMb,I;UAEeJ,c;;;KAFfI,I;AA4DN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport useGeoLocation from \"../hook/useGeoLocation\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Chek = () => {\n\n    const location = useGeoLocation();\n\n    let lat1 = location.coordinates.lat;\n    lat1 = parseFloat (lat1)\n    let lng1 = location.coordinates.lng;\n    lng1 = parseFloat (lng1)\n\n    let rezult = false;\n    // function timeout(){\n    //     4.2062 < lat1 < 4.20489 && 3.93943 < lng1 < 3.99016 ? rezult = true : rezult = false\n    // }\n\n    function timeout() {\n        let result;\n        if (4.2062 < lat1 < 4.20489) {\n          if(3.93943 < lng1 < 3.99016){\n            \n          }\n        } else {\n          result = 'NOT positive';\n        }\n        return result;\n      }\n      timeout()\n\n    console.log(rezult)\n    \n    \n    console.log(rezult)\n    console.log(lat1, lng1, typeof lat1, lng1)\n\n  return (      \n\n    <Container>\n            <Row>\n                <Col md={8}>\n                <div className=\"separator\">Ваша геолокация</div>\n                    <div className=\"row d-flex justify-content-center mt-3 mb-5 pb-5\">\n                <div className=\"col-6\">\n                    <div className=\"card\">\n                        <div className=\"card-header text-left font-weight-bold d-flex\">\n                            <div className=\"inline-block mr-auto pt-1\">\n                            <h1>Статус посещения</h1>\n                                {location.loaded\n                                    ? <h1>Вы на паре</h1>\n                                    : \"Location data not available yet.\"}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n                </Col>\n\n            </Row>\n        </Container>\n    \n  )}\n\nexport default Chek"]},"metadata":{},"sourceType":"module"}